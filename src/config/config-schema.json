{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AI Coding Assistants Configuration Schema",
  "description": "Schema for all AI coding assistant configurations",
  "type": "object",
  "properties": {
    "mcpServers": {
      "type": "object",
      "description": "Model Context Protocol (MCP) server configurations",
      "additionalProperties": {
        "$ref": "#/definitions/mcpServer"
      }
    }
  },
  "definitions": {
    "mcpServer": {
      "type": "object",
      "required": ["command", "args"],
      "properties": {
        "command": {
          "type": "string",
          "description": "Command to start the MCP server"
        },
        "args": {
          "type": "array",
          "description": "Arguments to pass to the command",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "object",
          "description": "Environment variables to set for the MCP server",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoapprove": {
          "type": "array",
          "description": "List of MCP methods to automatically approve",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "githubMcp": {
      "type": "object",
      "description": "GitHub MCP server configuration",
      "allOf": [
        { "$ref": "#/definitions/mcpServer" }
      ],
      "properties": {
        "env": {
          "type": "object",
          "properties": {
            "GITHUB_PERSONAL_ACCESS_TOKEN": {
              "type": "string",
              "description": "GitHub Personal Access Token"
            }
          }
        }
      }
    },
    "context7Mcp": {
      "type": "object",
      "description": "Context7 MCP server configuration",
      "allOf": [
        { "$ref": "#/definitions/mcpServer" }
      ],
      "properties": {
        "env": {
          "type": "object",
          "properties": {
            "CONTEXT7_API_KEY": {
              "type": "string",
              "description": "Context7 API Key"
            }
          }
        }
      }
    },
    "memoryMcp": {
      "type": "object",
      "description": "Memory MCP server configuration",
      "allOf": [
        { "$ref": "#/definitions/mcpServer" }
      ],
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Should include --memory-path parameter"
        }
      }
    },
    "taskMasterAiMcp": {
      "type": "object",
      "description": "Task Master AI MCP server configuration",
      "allOf": [
        { "$ref": "#/definitions/mcpServer" }
      ],
      "properties": {
        "env": {
          "type": "object",
          "properties": {
            "ANTHROPIC_API_KEY": {
              "type": "string",
              "description": "Anthropic API Key for Claude models"
            }
          }
        }
      }
    },
    "stackoverflowMcp": {
      "type": "object",
      "description": "StackOverflow MCP server configuration",
      "allOf": [
        { "$ref": "#/definitions/mcpServer" }
      ],
      "properties": {
        "env": {
          "type": "object",
          "properties": {
            "STACKEXCHANGE_API_KEY": {
              "type": "string",
              "description": "StackExchange API Key for increased rate limits (optional)"
            },
            "MAX_SEARCH_RESULTS": {
              "type": "string",
              "description": "Maximum number of search results to return (optional, default: 5)"
            },
            "SEARCH_TIMEOUT_MS": {
              "type": "string",
              "description": "Timeout for search operations in milliseconds (optional, default: 5000)"
            },
            "INCLUDE_CODE_SNIPPETS": {
              "type": "string",
              "description": "Whether to include code snippets in search results (optional, default: true)"
            },
            "PREFER_ACCEPTED_ANSWERS": {
              "type": "string",
              "description": "Whether to prioritize accepted answers in results (optional, default: true)"
            }
          }
        }
      }
    },
    "commandShellMcp": {
      "type": "object",
      "description": "Command Shell MCP server configuration",
      "allOf": [
        { "$ref": "#/definitions/mcpServer" }
      ],
      "properties": {
        "env": {
          "type": "object",
          "properties": {
            "ALLOWED_COMMANDS": {
              "type": "string",
              "description": "Comma-separated list of allowed shell commands (empty allows all non-blocked commands)"
            },
            "BLOCKED_COMMANDS": {
              "type": "string",
              "description": "Comma-separated list of blocked shell commands (default: rm,sudo,chmod,chown,dd,mkfs,mount,umount,reboot,shutdown)"
            },
            "COMMAND_TIMEOUT_MS": {
              "type": "string",
              "description": "Timeout for command execution in milliseconds (default: 5000)"
            },
            "WORKING_DIRECTORY": {
              "type": "string",
              "description": "Working directory for command execution (optional, default: current working directory)"
            },
            "LOG_COMMANDS": {
              "type": "string",
              "description": "Whether to log executed commands (optional, default: true)"
            },
            "ENABLE_ENVIRONMENT_VARIABLES": {
              "type": "string",
              "description": "Whether to allow custom environment variables in commands (optional, default: false)"
            }
          },
          "required": ["BLOCKED_COMMANDS", "COMMAND_TIMEOUT_MS"]
        }
      }
    }
  }
}