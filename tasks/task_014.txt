# Task ID: 14
# Title: Implement Git Hook Support
# Status: pending
# Dependencies: None
# Priority: medium
# Description: Add Git hook support using Husky or lint-staged to run Claude for code review on commits.
# Details:
Implement Git hooks for AI code review:

1. Add Husky for Git hook management
2. Configure pre-commit hooks to run Claude for code review
3. Add configuration options for review strictness
4. Implement a mechanism to bypass hooks when needed
5. Add documentation for Git hook usage

Implementation steps:

1. Install dependencies:
```bash
npm install --save-dev husky lint-staged
```

2. Configure Husky in package.json:
```json
{
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "node scripts/claude-review.js"
    ]
  }
}
```

3. Create the Claude review script:
```javascript
// scripts/claude-review.js
const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

// Get staged files
const stagedFiles = process.argv.slice(2);

// Read configuration
const configPath = path.join(process.cwd(), '.claude-review.json');
const config = fs.existsSync(configPath) 
  ? JSON.parse(fs.readFileSync(configPath, 'utf8'))
  : { strictness: 'medium' };

// Process each file
stagedFiles.forEach(file => {
  const content = fs.readFileSync(file, 'utf8');
  
  // Call Claude API for review
  const review = callClaudeAPI(content, config.strictness);
  
  // Process review results
  if (review.issues.length > 0) {
    console.log(`Issues found in ${file}:`);
    review.issues.forEach(issue => {
      console.log(`- ${issue.message} (line ${issue.line})`);
    });
    
    if (config.strictness === 'high') {
      process.exit(1); // Fail the commit
    }
  }
});

function callClaudeAPI(content, strictness) {
  // Implementation of Claude API call
  // This would use the appropriate API client to send the code for review
  // and return the results in a structured format
}
```

4. Add configuration file template:
```json
// .claude-review.json
{
  "strictness": "medium", // "low", "medium", or "high"
  "ignorePatterns": ["dist/**", "node_modules/**"],
  "customPrompt": "Review this code for bugs and improvements:"
}
```

# Test Strategy:
Test Git hooks with various code changes to verify they run correctly. Test with different strictness levels to ensure appropriate behavior. Create mock Claude API responses for testing without actual API calls.
