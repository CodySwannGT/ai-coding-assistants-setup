name: Deploy and Test

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - staging
          - production
        default: staging

jobs:
  # Example: Using the release workflow
  release:
    uses: ./.github/workflows/release.yml
    with:
      environment: ${{ github.event.inputs.environment || 'staging' }}
    secrets: inherit

  # Customer-specific deployment steps
  deploy:
    needs: release
    runs-on: ubuntu-latest
    outputs:
      app_url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Deploy to environment
        id: deploy
        run: |
          # Your deployment logic here
          echo "Deploying to ${{ github.event.inputs.environment || 'staging' }}..."
          
          # Example output - replace with actual deployment URL
          if [ "${{ github.event.inputs.environment || 'staging' }}" = "production" ]; then
            echo "url=https://api.example.com" >> $GITHUB_OUTPUT
          else
            echo "url=https://staging.api.example.com" >> $GITHUB_OUTPUT
          fi

  # Run smoke test immediately after deployment
  smoke_test:
    needs: deploy
    uses: ./.github/workflows/k6-load-test.yml
    with:
      environment: ${{ github.event.inputs.environment || 'staging' }}
      test_scenario: smoke
      base_url: ${{ needs.deploy.outputs.app_url }}
      fail_on_threshold: true
    secrets: inherit

  # Run load test only if smoke test passes
  load_test:
    needs: [deploy, smoke_test]
    uses: ./.github/workflows/k6-load-test.yml
    with:
      environment: ${{ github.event.inputs.environment || 'staging' }}
      test_scenario: load
      base_url: ${{ needs.deploy.outputs.app_url }}
      fail_on_threshold: false  # Don't fail deployment, just report
      virtual_users: 20  # Override default VUs
    secrets: inherit

  # Optional: Run stress test for staging only
  stress_test:
    if: github.event.inputs.environment != 'production'
    needs: [deploy, smoke_test]
    uses: ./.github/workflows/k6-load-test.yml
    with:
      environment: ${{ github.event.inputs.environment || 'staging' }}
      test_scenario: stress
      base_url: ${{ needs.deploy.outputs.app_url }}
      fail_on_threshold: false
      upload_results: true
    secrets: inherit

  # Summary of all tests
  test_summary:
    needs: [smoke_test, load_test, stress_test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Test Results Summary
        run: |
          echo "## 📊 Performance Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Smoke Test" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.smoke_test.outputs.test_passed }}" = "true" ]; then
            echo "✅ **PASSED**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **FAILED**" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Load Test" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.load_test.outputs.test_passed }}" = "true" ]; then
            echo "✅ **PASSED**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **FAILED** (non-blocking)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.environment }}" != "production" ]; then
            echo "### Stress Test" >> $GITHUB_STEP_SUMMARY
            if [ "${{ needs.stress_test.outputs.test_passed }}" = "true" ]; then
              echo "✅ **PASSED**" >> $GITHUB_STEP_SUMMARY
            else
              echo "⚠️ **FAILED** (non-blocking)" >> $GITHUB_STEP_SUMMARY
            fi
          fi