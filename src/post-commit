#!/bin/bash

set -e

# Get more detailed commit info
COMMIT_MSG=$(git log -1 --pretty=%B)
COMMIT_AUTHOR=$(git log -1 --pretty=%an)
COMMIT_DATE=$(git log -1 --pretty=%ad --date=format:'%Y-%m-%d %H:%M:%S')
COMMIT_HASH=$(git log -1 --pretty=%H)
PROJECT_NAME=$(basename "$(git rev-parse --show-toplevel)")
MEMORY_PATH="$(git rev-parse --show-toplevel)/.ai/memory.jsonl"

# Simple commit type extraction using standard shell commands
COMMIT_TYPE="other"
for type in feat fix docs style refactor perf test build ci chore revert; do
  if [[ "$COMMIT_MSG" == "$type:"* || "$COMMIT_MSG" == "$type("* ]]; then
    COMMIT_TYPE="$type"
    break
  fi
done

echo "📥 Writing to memory: $COMMIT_MSG"
echo "📁 Memory file: $MEMORY_PATH"
echo "🏷️ Commit type detected: $COMMIT_TYPE"

# Make sure the directory exists
mkdir -p "$(dirname "$MEMORY_PATH")"

# Create JSON in the same format as MCP-created entities
OBSERVATION="{\"type\":\"entity\",\"name\":\"Commit:$COMMIT_HASH\",\"entityType\":\"Commit\",\"observations\":[\"[$COMMIT_TYPE] $COMMIT_MSG\",\"Author: $COMMIT_AUTHOR\",\"Date: $COMMIT_DATE\"]}"

# Also create a relation from the project to this commit
RELATION="{\"type\":\"relation\",\"from\":\"Project:$PROJECT_NAME\",\"to\":\"Commit:$COMMIT_HASH\",\"relationType\":\"HAS_COMMIT\"}"

# Use printf for better control over newlines
printf "%s\n" "$OBSERVATION" >> "$MEMORY_PATH"
printf "%s\n" "$RELATION" >> "$MEMORY_PATH"

echo "✅ Commit information stored in project memory"